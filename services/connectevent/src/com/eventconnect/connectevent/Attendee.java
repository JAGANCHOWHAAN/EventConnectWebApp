/*Copyright (c) 2023-2024 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.eventconnect.connectevent;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Attendee generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`Attendee`")
public class Attendee implements Serializable {

    private Integer id;
    private Integer userId;
    private Integer eventId;
    private String status;
    private UserDetail userDetail;
    private EventDetail eventDetail;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`Id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`User_Id`", nullable = true, scale = 0, precision = 10)
    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    @Column(name = "`Event_Id`", nullable = true, scale = 0, precision = 10)
    public Integer getEventId() {
        return this.eventId;
    }

    public void setEventId(Integer eventId) {
        this.eventId = eventId;
    }

    @Column(name = "`Status`", nullable = true, length = 10)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`User_Id`", referencedColumnName = "`Id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`Attendee_ibfk_1`"))
    @Fetch(FetchMode.JOIN)
    public UserDetail getUserDetail() {
        return this.userDetail;
    }

    public void setUserDetail(UserDetail userDetail) {
        if(userDetail != null) {
            this.userId = userDetail.getId();
        }

        this.userDetail = userDetail;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`Event_Id`", referencedColumnName = "`Id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`Attendee_ibfk_2`"))
    @Fetch(FetchMode.JOIN)
    public EventDetail getEventDetail() {
        return this.eventDetail;
    }

    public void setEventDetail(EventDetail eventDetail) {
        if(eventDetail != null) {
            this.eventId = eventDetail.getId();
        }

        this.eventDetail = eventDetail;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Attendee)) return false;
        final Attendee attendee = (Attendee) o;
        return Objects.equals(getId(), attendee.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}