/*Copyright (c) 2023-2024 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.eventconnect.connectevent;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.sql.Time;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * EventDetail generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`EventDetail`", uniqueConstraints = {
            @UniqueConstraint(name = "`Title`", columnNames = {"`Title`"}),
            @UniqueConstraint(name = "`MeetingLink`", columnNames = {"`MeetingLink`"})})
public class EventDetail implements Serializable {

    private Integer id;
    private String title;
    private String organizerName;
    private String organizerEmail;
    private String organizerPhNo;
    private String about;
    private String location;
    private String fee;
    private Date startDate;
    private Date endDate;
    private Time startTime;
    private Time endTime;
    private String poster;
    private boolean isOnline;
    private String meetingLink;
    private String status;
    private Integer userId;
    private UserDetail userDetail;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`Id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`Title`", nullable = false, length = 255)
    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    @Column(name = "`OrganizerName`", nullable = false, length = 255)
    public String getOrganizerName() {
        return this.organizerName;
    }

    public void setOrganizerName(String organizerName) {
        this.organizerName = organizerName;
    }

    @Column(name = "`OrganizerEmail`", nullable = false, length = 255)
    public String getOrganizerEmail() {
        return this.organizerEmail;
    }

    public void setOrganizerEmail(String organizerEmail) {
        this.organizerEmail = organizerEmail;
    }

    @Column(name = "`OrganizerPhNo`", nullable = false, length = 15)
    public String getOrganizerPhNo() {
        return this.organizerPhNo;
    }

    public void setOrganizerPhNo(String organizerPhNo) {
        this.organizerPhNo = organizerPhNo;
    }

    @Column(name = "`About`", nullable = false, length = 2147483647)
    public String getAbout() {
        return this.about;
    }

    public void setAbout(String about) {
        this.about = about;
    }

    @Column(name = "`Location`", nullable = false, length = 255)
    public String getLocation() {
        return this.location;
    }

    public void setLocation(String location) {
        this.location = location;
    }

    @Column(name = "`Fee`", nullable = false, length = 255)
    public String getFee() {
        return this.fee;
    }

    public void setFee(String fee) {
        this.fee = fee;
    }

    @Column(name = "`StartDate`", nullable = false)
    public Date getStartDate() {
        return this.startDate;
    }

    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    @Column(name = "`EndDate`", nullable = false)
    public Date getEndDate() {
        return this.endDate;
    }

    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    @Column(name = "`StartTime`", nullable = false)
    public Time getStartTime() {
        return this.startTime;
    }

    public void setStartTime(Time startTime) {
        this.startTime = startTime;
    }

    @Column(name = "`EndTime`", nullable = false)
    public Time getEndTime() {
        return this.endTime;
    }

    public void setEndTime(Time endTime) {
        this.endTime = endTime;
    }

    @Column(name = "`Poster`", nullable = false, length = 4096)
    public String getPoster() {
        return this.poster;
    }

    public void setPoster(String poster) {
        this.poster = poster;
    }

    @Column(name = "`IsOnline`", nullable = false)
    public boolean isIsOnline() {
        return this.isOnline;
    }

    public void setIsOnline(boolean isOnline) {
        this.isOnline = isOnline;
    }

    @Column(name = "`MeetingLink`", nullable = true, length = 255)
    public String getMeetingLink() {
        return this.meetingLink;
    }

    public void setMeetingLink(String meetingLink) {
        this.meetingLink = meetingLink;
    }

    @Column(name = "`Status`", nullable = true, length = 9)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Column(name = "`User_Id`", nullable = true, scale = 0, precision = 10)
    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`User_Id`", referencedColumnName = "`Id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`EventDetail_ibfk_1`"))
    @Fetch(FetchMode.JOIN)
    public UserDetail getUserDetail() {
        return this.userDetail;
    }

    public void setUserDetail(UserDetail userDetail) {
        if(userDetail != null) {
            this.userId = userDetail.getId();
        }

        this.userDetail = userDetail;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof EventDetail)) return false;
        final EventDetail eventDetail = (EventDetail) o;
        return Objects.equals(getId(), eventDetail.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}